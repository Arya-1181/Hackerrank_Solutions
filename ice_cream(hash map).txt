/*
#include <bits/stdc++.h>

using namespace std;

void icecream(long long k, vector <long long> v){
    for (long long i=0; i<v.size(); i++){
        for (long long j=i+1; j<v.size(); j++){
            if (v[i]+v[j]==k){
                cout<<i+1<<" "<<j+1<<endl;
                return ;
            }
        }
    }
}

int main(){
    int t;
    cin>>t;
    for (int i=0; i<t; i++){
        long long n,k;
        cin>>k>>n;
        vector <long long> v;
        for (long long i=0; i<n; i++){
            long long a;
            cin>>a;            
            v.push_back(a);
        }
        icecream(k,v);
    }return 0;
}

*/
/* Second Solution

#include <bits/stdc++.h>

using namespace std;

void icecream(long long k, vector <long long> v){
    for (long long i=0; i<v.size(); i++){
        long long diff = k - v[i];
//        vector <int>::iterator it;
        auto it = find(v.begin()+i+1,v.end(),diff);
        if (it!=v.end()){
            cout<<i+1<<" "<<it - v.begin() +1<<endl;
            return;
        }
    }
}

int main(){
    int t;
    cin>>t;
    for (int i=0; i<t; i++){
        long long n,k;
        cin>>k>>n;
        vector <long long> v;
        for (long long i=0; i<n; i++){
            long long a;
            cin>>a;            
            v.push_back(a);
        }
        icecream(k,v);
    }return 0;
}
*/
