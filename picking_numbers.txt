//discussion solution

#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

int main() {
   int n,k,max = 0;
    cin>>n;
    int a[100]={0};
    for(int i = 0;i<n;i++){
        cin>>k;
        a[k]++;
    }
    for(int i = 0;i<n-1;i++){
        if(a[i]+a[i+1]> max) max = a[i]+a[i+1];
    }
    cout<<max;
    return 0;
}

// my code 

#include <bits/stdc++.h>

using namespace std;

int main(){
    int n;
    cin>>n;
    vector <int> v;
    for (int i=0; i<n; i++){
        int a;
        cin>>a;
        v.push_back(a);
    }
    // cin completed
    vector <int> temp;
    int count,diff,buffer;
    for (int i=0; i<n-1; i++){
        count=0;
        buffer=v[i];
        for (int j=0; j<n; j++){
            diff=abs(v[i]-v[j]);
            if (diff<=1&&abs(buffer-v[j])<=1){
            count++;
            buffer=v[j];
//            cout<<v[i]<<"  "<<v[j]<<endl;
            }
            else 
            continue;
        }
//        cout<<endl;
        temp.push_back(count);
    }
    sort(temp.begin(),temp.end(),greater<int>());
    cout<<temp[0];
    return 0;
}

// correct solution also mine
#include <bits/stdc++.h>

using namespace std;

int main(){
    int n;
    cin>>n;
    vector <int> v;
    for (int i=0; i<n; i++){
        int a;
        cin>>a;
        v.push_back(a);
    }
    // cin completed
    sort(v.begin(),v.end());
    vector <int> temp;
    int count,diff,buffer;
    for (int i=0; i<n-1; i++){
        count=0;
        for (int j=i+1; j<n; j++){
            diff=abs(v[i]-v[j]);
            if (diff<=1){
            count++;
//            cout<<v[i]<<"  "<<v[j]<<endl;
            }
            else 
            continue;
        }
//        cout<<endl;
        temp.push_back(count+1);
    }
    sort(temp.begin(),temp.end(),greater<int>());
    cout<<temp[0];
    return 0;
}